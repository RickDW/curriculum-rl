// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.191.1/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../docker/Dockerfile",

	// arguments to pass to the docker run command
	"runArgs": [
		"--gpus", "all", // allow access to the host's GPU
		"-e", "DISPLAY=:1" // set an environment variable for xvfb (might be optional)
	],

	// Shut down the container when VS code closes
	"shutdownAction": "stopContainer",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"python.pythonPath": "/opt/conda/bin/python",
		"python.experiments.optOutFrom": ["All"]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["ms-python.python", "gruntfuggly.todo-tree", "mhutchie.git-graph"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// Start a virtual frame buffer
	// TODO look into -ac for security reasons, seems unsafe
	"postCreateCommand": "Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &> xvfb.log",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
